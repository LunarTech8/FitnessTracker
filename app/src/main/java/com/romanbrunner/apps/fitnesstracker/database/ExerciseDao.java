/*-------------------------------------------------------------
// Description:
Dao = Data access object.
Interface that defines how the Exercise database in AppDatabase can be accessed.
The function implementations are generated by Room with the annotation settings.
(https://developer.android.com/training/data-storage/room/accessing-data.html)
-------------------------------------------------------------*/
package com.romanbrunner.apps.fitnesstracker.database;

import androidx.lifecycle.LiveData;
import androidx.room.Dao;
import androidx.room.Delete;
import androidx.room.Insert;
import androidx.room.OnConflictStrategy;
import androidx.room.Query;
import androidx.room.Update;

import java.util.List;


@Dao
public interface ExerciseDao
{
    // --------------------
    // Functional code
    // --------------------

    @Query("SELECT * FROM exercises")
    LiveData<List<ExerciseEntity>> loadAll();

    @Query("SELECT * FROM exercises WHERE workoutId = :searchWorkoutId")
    LiveData<List<ExerciseEntity>> loadByWorkoutId(int searchWorkoutId);

    @Query("SELECT * FROM exercises WHERE id IN (:searchIds)")
    LiveData<List<ExerciseEntity>> loadByIds(int[] searchIds);

    @Query("SELECT * FROM exercises WHERE name LIKE :searchName AND " + "token LIKE :searchToken LIMIT 1")
    LiveData<ExerciseEntity> loadByNameAndToken(String searchName, String searchToken);

    @Insert
    void insert(List<ExerciseEntity> exercises);

    @Insert(onConflict = OnConflictStrategy.REPLACE)
    void insertOrReplace(ExerciseEntity... exercises);

    @Update
    void update(List<ExerciseEntity> exercises);
}