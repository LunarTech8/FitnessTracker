/*-------------------------------------------------------------
// Description:
Dao = Data access object.
Interface that defines how the Workout database in AppDatabase can be accessed.
The function implementations are generated by Room with the annotation settings.
(https://developer.android.com/training/data-storage/room/accessing-data.html)
-------------------------------------------------------------*/
package com.romanbrunner.apps.fitnesstracker.database;

import androidx.lifecycle.LiveData;
import androidx.room.Dao;
import androidx.room.Delete;
import androidx.room.Insert;
import androidx.room.Query;
import androidx.room.Update;

import java.util.List;


@Dao
public interface WorkoutDao
{
    // --------------------
    // Functional code
    // --------------------

    @Query("SELECT * FROM workouts")
    LiveData<List<WorkoutEntity>> loadAll();

    @Query("SELECT * FROM workouts ORDER BY id DESC LIMIT 1")
    LiveData<WorkoutEntity> loadNewest();

    @Query("SELECT * FROM workouts WHERE id < (SELECT MAX(id) FROM workouts) ORDER BY id DESC LIMIT 1")
    LiveData<WorkoutEntity> loadSecondNewest();

    @Query("SELECT * FROM workouts WHERE id LIKE :searchId LIMIT 1")
    LiveData<WorkoutEntity> loadById(int searchId);

    @Insert
    void insert(WorkoutEntity... workouts);

    @Update
    void update(WorkoutEntity... workouts);

    @Delete
    void delete(WorkoutEntity... workouts);
}