/*-------------------------------------------------------------
// Description:
Dao = Data access object.
Interface that defines how the Exercise database in AppDatabase can be accessed.
The function implementations are generated by Room with the annotation settings.
(https://developer.android.com/training/data-storage/room/accessing-data.html)
-------------------------------------------------------------*/
package com.romanbrunner.apps.fitnesstracker;

import androidx.room.Dao;
import androidx.room.Delete;
import androidx.room.Insert;
import androidx.room.Query;
import androidx.room.Update;

import java.util.List;


@Dao
public interface ExerciseDao
{
    // --------------------
    // Functional code
    // --------------------

    @Query("SELECT * FROM exercises")
    List<Exercise> getAll();

    @Query("SELECT * FROM exercises WHERE id LIKE :searchId LIMIT 1")
    Exercise getById(int searchId);

    @Query("SELECT * FROM exercises WHERE id IN (:searchIds)")
    List<Exercise> getByIds(int[] searchIds);

    @Query("SELECT * FROM exercises WHERE name LIKE :searchName AND " + "token LIKE :searchToken LIMIT 1")
    Exercise getByNameAndToken(String searchName, String searchToken);

    @Insert
    void insert(Exercise... exercises);

    @Insert
    void insert(List<Exercise> exercises);

    @Update
    void update(Exercise... exercises);

    @Delete
    void delete(Exercise... exercise);
}